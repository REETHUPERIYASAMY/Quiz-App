// src/App.js
import React, { useState, useEffect } from 'react';
import './App.css';
import reportWebVitals from './reportWebVitals';
import QuizSetup from './components/QuizSetup';
import Quiz from './components/Quiz';
import QuizResults from './components/QuizResults';

function App() {
  const [language, setLanguage] = useState('English');
  const [selectedLevel, setSelectedLevel] = useState(null);
  const [activePage, setActivePage] = useState('home');
  const [quizSettings, setQuizSettings] = useState(null);
  const [quizResults, setQuizResults] = useState(null);
  const [userProfile, setUserProfile] = useState({
    username: 'QuizUser123',
    memberSince: 'Jan 2025',
    totalPoints: 1250,
    totalQuizzes: 24,
    averageScore: 78,
    achievements: 5
  });

  const toggleLanguage = () => {
    setLanguage(language === 'English' ? 'Tamil' : 'English');
  };

  const levels = [
    { id: 'beginner', name: { English: 'Beginner', Tamil: 'родрпКроЯроХрпНроХ' }, color: '#4CAF50', icon: 'ЁЯМ▒', grade: 'Grades 6-7' },
    { id: 'intermediate', name: { English: 'Intermediate', Tamil: 'роЗроЯрпИроиро┐ро▓рпИ' }, color: '#2196F3', icon: 'ЁЯЪА', grade: 'Grades 8-10' },
    { id: 'advanced', name: { English: 'Advanced', Tamil: 'роорпЗроорпНрокроЯрпНроЯ' }, color: '#9C27B0', icon: 'ЁЯПЖ', grade: 'Grades 11-12' }
  ];

  const handleLevelSelect = (level) => {
    setSelectedLevel(level);
    setQuizSettings({
      language,
      level: level.id,
      numberOfQuestions: 10
    });
    setActivePage('quizSetup');
  };

  const handleStartQuiz = (numberOfQuestions) => {
    setQuizSettings({
      ...quizSettings,
      numberOfQuestions
    });
    setActivePage('quiz');
  };

  const handleQuizComplete = (results) => {
    setQuizResults(results);
    setActivePage('results');
    
    // Update user profile
    const pointsEarned = results.correctAnswers * 10;
    setUserProfile(prev => ({
      ...prev,
      totalPoints: prev.totalPoints + pointsEarned,
      totalQuizzes: prev.totalQuizzes + 1,
      averageScore: Math.round((prev.averageScore * prev.totalQuizzes + 
        (results.correctAnswers / results.totalQuestions) * 100) / (prev.totalQuizzes + 1))
    }));
  };

  const handleRestartQuiz = () => {
    setActivePage('quiz');
  };

  const handleBackToHome = () => {
    setActivePage('home');
    setSelectedLevel(null);
    setQuizResults(null);
  };

  const handleFeatureCardClick = (feature) => {
    // Handle feature card clicks
    if (feature === 'profile') {
      setActivePage('profile');
    } else if (feature === 'help') {
      setActivePage('help');
    }
  };

  useEffect(() => {
    document.title = language === 'English' ? 'Quiz Master' : 'ро╡ро┐ройро╛ рооро╛ро╕рпНроЯро░рпН';
  }, [language]);

  const renderPageContent = () => {
    switch(activePage) {
      case 'home':
        return (
          <>
            <div className="quiz-header">
              <h1>{language === 'English' ? 'Quiz Master' : 'ро╡ро┐ройро╛ рооро╛ро╕рпНроЯро░рпН'}</h1>
              <p>{language === 'English' ? 'Test your knowledge!' : 'роЙроЩрпНроХро│рпН роЕро▒ро┐ро╡рпИ роЪрпЛродро┐роХрпНроХро╡рпБроорпН!'}</p>
            </div>
            
            <div className="level-selection">
              <h2>{language === 'English' ? 'Select Difficulty Level' : 'роЪро┐ро░роо роиро┐ро▓рпИропрпИродрпН родрпЗро░рпНроирпНродрпЖроЯрпБроХрпНроХро╡рпБроорпН'}</h2>
              <div className="level-buttons">
                {levels.map((level) => (
                  <button
                    key={level.id}
                    className="level-btn"
                    style={{ backgroundColor: level.color }}
                    onClick={() => handleLevelSelect(level)}
                  >
                    <span className="level-icon">{level.icon}</span>
                    <span className="level-name">{level.name[language]}</span>
                    <span className="level-grade">{level.grade}</span>
                  </button>
                ))}
              </div>
            </div>
            
            <div className="features">
              <div className="feature-card" onClick={() => handleFeatureCardClick('profile')}>
                <div className="icon">ЁЯПЖ</div>
                <h3>{language === 'English' ? 'Earn Points' : 'рокрпБро│рпНро│ро┐роХро│рпН рокрпЖро▒рпБроЩрпНроХро│рпН'}</h3>
                <p>{language === 'English' ? 'Track your progress' : 'роЙроЩрпНроХро│рпН роорпБройрпНройрпЗро▒рпНро▒родрпНродрпИроХрпН роХрогрпНроХро╛рогро┐роХрпНроХро╡рпБроорпН'}</p>
              </div>
              <div className="feature-card" onClick={() => handleFeatureCardClick('help')}>
                <div className="icon">ЁЯМН</div>
                <h3>{language === 'English' ? 'Bilingual Support' : 'роЗро░рпБроорпКро┤ро┐ роЖродро░ро╡рпБ'}</h3>
                <p>{language === 'English' ? 'Seamless language switching' : 'роЪрпАро░ро╛рой роорпКро┤ро┐ рооро╛ро▒рпНро▒роорпН'}</p>
              </div>
              <div className="feature-card" onClick={() => handleFeatureCardClick('profile')}>
                <div className="icon">ЁЯУК</div>
                <h3>{language === 'English' ? 'Progress Tracking' : 'роорпБройрпНройрпЗро▒рпНро▒роХрпН роХрогрпНроХро╛рогро┐рокрпНрокрпБ'}</h3>
                <p>{language === 'English' ? 'Monitor your improvement' : 'роЙроЩрпНроХро│рпН роорпБройрпНройрпЗро▒рпНро▒родрпНродрпИроХрпН роХрогрпНроХро╛рогро┐роХрпНроХро╡рпБроорпН'}</p>
              </div>
            </div>
          </>
        );
      case 'about':
        return (
          <div className="page-content">
            <h2>{language === 'English' ? 'About Us' : 'роОроЩрпНроХро│рпИрокрпН рокро▒рпНро▒ро┐'}</h2>
            <p>
              {language === 'English' 
                ? 'Quiz Master is an innovative educational platform designed to make learning fun and engaging through interactive quizzes. Our mission is to provide accessible learning resources in multiple languages to help users expand their knowledge and skills.'
                : 'ро╡ро┐ройро╛ рооро╛ро╕рпНроЯро░рпН роОройрпНрокродрпБ роКроЯро╛роЯрпБроорпН ро╡ро┐ройро╛родрпНродро┐роЯрпНроЯроЩрпНроХро│рпН роорпВро▓роорпН роХро▒рпНро▒ро▓рпИ роЪрпБро╡ро╛ро░ро╕рпНропрооро╛роХро╡рпБроорпН роИро░рпНроХрпНроХроХрпНроХрпВроЯро┐ропродро╛роХро╡рпБроорпН рооро╛ро▒рпНро▒рпБро╡родро▒рпНроХро╛роХ ро╡роЯро┐ро╡роорпИроХрпНроХрокрпНрокроЯрпНроЯ роТро░рпБ рокрпБродрпБроорпИропро╛рой роХро▓рпНро╡ро┐ родро│рооро╛роХрпБроорпН. рокропройро░рпНроХро│рпН родроЩрпНроХро│рпН роЕро▒ро┐ро╡рпИропрпБроорпН родро┐ро▒ройрпНроХро│рпИропрпБроорпН ро╡ро┐ро░ро┐ро╡рпБрокроЯрпБродрпНрод роЙродро╡рпБро╡родро▒рпНроХро╛роХ рокро▓ роорпКро┤ро┐роХро│ро┐ро▓рпН роЕрогрпБроХроХрпНроХрпВроЯро┐роп роХро▒рпНро▒ро▓рпН ро╡ро│роЩрпНроХро│рпИ ро╡ро┤роЩрпНроХрпБро╡родрпЗ роОроЩрпНроХро│рпН роирпЛроХрпНроХроорпН.'}
            </p>
          </div>
        );
      case 'contact':
        return (
          <div className="page-content">
            <h2>{language === 'English' ? 'Contact Us' : 'роОроЩрпНроХро│рпИ родрпКроЯро░рпНрокрпБ роХрпКро│рпНро│'}</h2>
            <p>
              {language === 'English' 
                ? 'Email: support@quizmaster.com'
                : 'рооро┐ройрпНройроЮрпНроЪро▓рпН: support@quizmaster.com'}
            </p>
            <p>
              {language === 'English' 
                ? 'Phone: +1 (555) 123-4567'
                : 'родрпКро▓рпИрокрпЗроЪро┐: +1 (555) 123-4567'}
            </p>
            <p>
              {language === 'English' 
                ? 'Address: 123 Learning Street, Education City'
                : 'роорпБроХро╡ро░ро┐: 123 роХро▒рпНро▒ро▓рпН родрпЖро░рпБ, роХро▓рпНро╡ро┐ роироХро░роорпН'}
            </p>
          </div>
        );
      case 'help':
        return (
          <div className="page-content">
            <h2>{language === 'English' ? 'Help & Support' : 'роЙродро╡ро┐ рооро▒рпНро▒рпБроорпН роЖродро░ро╡рпБ'}</h2>
            <p>
              {language === 'English' 
                ? '1. Select your preferred difficulty level to start a quiz.'
                : '1. ро╡ро┐ройро╛родрпНродро┐роЯрпНроЯродрпНродрпИродрпН родрпКроЯроЩрпНроХ роЙроЩрпНроХро│рпБроХрпНроХрпБ ро╡ро┐ро░рпБрокрпНрокрооро╛рой роЪро┐ро░роо роиро┐ро▓рпИропрпИродрпН родрпЗро░рпНроирпНродрпЖроЯрпБроХрпНроХро╡рпБроорпН.'}
            </p>
            <p>
              {language === 'English' 
                ? '2. Answer questions to earn points and track your progress.'
                : '2. рокрпБро│рпНро│ро┐роХро│рпН рокрпЖро▒ро╡рпБроорпН роЙроЩрпНроХро│рпН роорпБройрпНройрпЗро▒рпНро▒родрпНродрпИроХрпН роХрогрпНроХро╛рогро┐роХрпНроХро╡рпБроорпН роХрпЗро│рпНро╡ро┐роХро│рпБроХрпНроХрпБ рокродро┐ро▓ро│ро┐роХрпНроХро╡рпБроорпН.'}
            </p>
            <p>
              {language === 'English' 
                ? '3. Switch between languages using the toggle in the navigation bar.'
                : '3. ро╡ро┤ро┐роЪрпЖро▓рпБродрпНродро▓рпН рокроЯрпНроЯро┐ропро┐ро▓рпН роЙро│рпНро│ роЯрпЛроХро┐ро│рпИрокрпН рокропройрпНрокроЯрпБродрпНродро┐ роорпКро┤ро┐роХро│рпБроХрпНроХрпБ роЗроЯрпИропрпЗ рооро╛ро▒ро╡рпБроорпН.'}
            </p>
          </div>
        );
      case 'profile':
        return (
          <div className="page-content">
            <h2>{language === 'English' ? 'User Profile' : 'рокропройро░рпН роЪрпБропро╡ро┐ро╡ро░роорпН'}</h2>
            <div className="profile-info">
              <div className="profile-avatar">ЁЯСд</div>
              <div className="profile-details">
                <p><strong>{language === 'English' ? 'Username:' : 'рокропройро░рпНрокрпЖропро░рпН:'}</strong> {userProfile.username}</p>
                <p><strong>{language === 'English' ? 'Member Since:' : 'роЙро▒рпБрокрпНрокро┐ройро░рпН роорпБродро▓рпН:'}</strong> {userProfile.memberSince}</p>
                <p><strong>{language === 'English' ? 'Total Points:' : 'роорпКродрпНрод рокрпБро│рпНро│ро┐роХро│рпН:'}</strong> {userProfile.totalPoints}</p>
              </div>
            </div>
            <div className="profile-stats">
              <h3>{language === 'English' ? 'Quiz Statistics' : 'ро╡ро┐ройро╛ рокрпБро│рпНро│ро┐ро╡ро┐ро╡ро░роЩрпНроХро│рпН'}</h3>
              <div className="stats-grid">
                <div className="stat-item">
                  <div className="stat-value">{userProfile.totalQuizzes}</div>
                  <div className="stat-label">{language === 'English' ? 'Quizzes Taken' : 'роОроЯрпБродрпНрод ро╡ро┐ройро╛роХрпНроХро│рпН'}</div>
                </div>
                <div className="stat-item">
                  <div className="stat-value">{userProfile.averageScore}%</div>
                  <div className="stat-label">{language === 'English' ? 'Average Score' : 'роЪро░ро╛роЪро░ро┐ роородро┐рокрпНрокрпЖрогрпН'}</div>
                </div>
                <div className="stat-item">
                  <div className="stat-value">{userProfile.achievements}</div>
                  <div className="stat-label">{language === 'English' ? 'Achievements' : 'роЪро╛родройрпИроХро│рпН'}</div>
                </div>
              </div>
            </div>
          </div>
        );
      case 'quizSetup':
        return (
          <QuizSetup 
            language={language}
            level={selectedLevel.id}
            onStartQuiz={handleStartQuiz}
            onBack={handleBackToHome}
          />
        );
      case 'quiz':
        return (
          <Quiz 
            language={quizSettings.language}
            level={quizSettings.level}
            numberOfQuestions={quizSettings.numberOfQuestions}
            onQuizComplete={handleQuizComplete}
            onBack={handleBackToHome}
          />
        );
      case 'results':
        return (
          <QuizResults 
            results={quizResults}
            language={language}
            onRestart={handleRestartQuiz}
            onHome={handleBackToHome}
          />
        );
      default:
        return null;
    }
  };

  return (
    <div className="app-container">
      <nav className="navbar">
        <div className="nav-brand">
          <span className="brand-icon">ЁЯза</span>
          <span className="brand-name">Quiz Master</span>
        </div>
        
        <div className="nav-links">
          <button 
            className={`nav-link ${activePage === 'home' ? 'active' : ''}`}
            onClick={() => setActivePage('home')}
          >
            {language === 'English' ? 'Home' : 'роорпБроХрокрпНрокрпБ'}
          </button>
          <button 
            className={`nav-link ${activePage === 'about' ? 'active' : ''}`}
            onClick={() => setActivePage('about')}
          >
            {language === 'English' ? 'About Us' : 'роОроЩрпНроХро│рпИрокрпН рокро▒рпНро▒ро┐'}
          </button>
          <button 
            className={`nav-link ${activePage === 'contact' ? 'active' : ''}`}
            onClick={() => setActivePage('contact')}
          >
            {language === 'English' ? 'Contact' : 'родрпКроЯро░рпНрокрпБ'}
          </button>
          <button 
            className={`nav-link ${activePage === 'help' ? 'active' : ''}`}
            onClick={() => setActivePage('help')}
          >
            {language === 'English' ? 'Help' : 'роЙродро╡ро┐'}
          </button>
        </div>
        
        <div className="nav-actions">
          <button 
            className={`nav-link ${activePage === 'profile' ? 'active' : ''}`}
            onClick={() => setActivePage('profile')}
          >
            <span className="profile-icon">ЁЯСд</span>
            <span>{language === 'English' ? 'Profile' : 'роЪрпБропро╡ро┐ро╡ро░роорпН'}</span>
          </button>
          <button onClick={toggleLanguage} className="lang-btn">
            {language === 'English' ? 'родрооро┐ро┤рпН' : 'English'}
          </button>
        </div>
      </nav>
      
      <main className="main-content">
        {renderPageContent()}
      </main>
      
      <footer>
        <p>{language === 'English' ? '┬й 2025 Quiz Master App' : '┬й 2025 ро╡ро┐ройро╛ рооро╛ро╕рпНроЯро░рпН рокропройрпНрокро╛роЯрпБ'}</p>
      </footer>
    </div>
  );
}

reportWebVitals();
export default App;